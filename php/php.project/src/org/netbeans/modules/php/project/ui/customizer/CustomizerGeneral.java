/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.netbeans.modules.php.project.ui.customizer;

import java.awt.event.ActionEvent;
import org.netbeans.spi.project.ui.support.ProjectCustomizer;

/**
 *
 * @author troizet
 */
public class CustomizerGeneral extends javax.swing.JPanel implements java.beans.Customizer {
    
    private Object bean;
    private final PhpProjectProperties properties;
    
    
    /**
     * Creates new customizer CustomizerGeneral
     */
    public CustomizerGeneral(final ProjectCustomizer.Category category, final PhpProjectProperties properties) {
        assert category != null;
        assert properties != null;

        this.properties = properties;        
        initComponents();
        init();
    }
    
    public void setObject(Object bean) {
        this.bean = bean;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        InterpretatorLabel = new javax.swing.JLabel();
        InterpretatorField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setText("General project settings");
        add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        InterpretatorLabel.setText("Interpretator");
        jPanel1.add(InterpretatorLabel, new java.awt.GridBagConstraints());

        InterpretatorField.setText("path to interpretator");
        jPanel1.add(InterpretatorField, new java.awt.GridBagConstraints());

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField InterpretatorField;
    private javax.swing.JLabel InterpretatorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void init() {
        InterpretatorField.setText(properties.getProjectInterpreter());
        
        InterpretatorField.addActionListener((ActionEvent ae) -> {
            System.err.println("save to properties: " + InterpretatorField.getText());
            properties.setProjectInterpreter(InterpretatorField.getText());
        });
    }
}
